name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Build Docker image
      run:  ./build-dep.sh && ./build-bin.sh

  build_and_test_ubuntu:
    name: Build and Test - Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Install dependencies
        run: |
          sudo apt-get install musl musl-dev
          sudo ln -s /usr/lib/x86_64-linux-musl/libc.so /usr/lib/libc.musl-x86_64.so.1

      - name: Build project
        run: |
          go mod vendor
          go install

      - name: Test Artifact
        env:
          PEACEMAKR_APIKEY: ${{ secrets.PEACEMAKR_TEST_API_KEY }}
        run: |
          export ARTIFACT_PATH=`go env GOPATH`/bin/peacemakr-cli
          time echo "hello secure world" | $ARTIFACT_PATH --encrypt | $ARTIFACT_PATH --decrypt

  build_and_test_macos:
    name: Build and Test - MacOS
    runs-on: macos-latest
    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Build project
        run: |
          go mod vendor
          go install

      - name: Test Artifact
        env:
          PEACEMAKR_APIKEY: ${{ secrets.PEACEMAKR_TEST_API_KEY }}
        run: |
          export ARTIFACT_PATH=`go env GOPATH`/bin/peacemakr-cli
          time echo "hello secure world" | $ARTIFACT_PATH --encrypt | $ARTIFACT_PATH --decrypt
